@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@inject UserManager<IdentityUser> userManager

@model IEnumerable<App.Models.Manager.DriverViewModel>
@{
    ViewData["Title"] = "Driver Table";
}

<h2>Driver Table</h2>
<a asp-controller="Home" asp-action="Index" class="pb-3 link-info">Back to Menu</a>
<div class="flex flex-col justify-content-center border border-secondary p-5 m-5 text-center">
    <table class="table table-striped border border-light">
        <thead>
            <tr>
                <th class="text-light">
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th class="text-light">
                    @Html.DisplayNameFor(model => model.Email)
                </th>
                <th class="text-light">
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th class="text-light">
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th class="text-light"></th>
            </tr>
        </thead>
        <tbody>
            @if(Model != null)
            {
                foreach(var item in Model)
                {
                    bool isUserActivated;
                    var user = await userManager.FindByEmailAsync(item.Email);
                    if(user == null) {
                        userManager.Logger.LogWarning("Couldn't find user by their email on the auth database.");
                        continue;
                    }
                    IList<Claim> claimsList = await userManager.GetClaimsAsync(user);
                    Claim? activationClaim = claimsList.SingleOrDefault(claim => claim.Type == "activated");
                    isUserActivated = activationClaim != null && activationClaim.Value == "True";
                    <tr>
                        <td class="text-light">
                            @Html.DisplayFor(model => item.Id)
                        </td>
                        <td class="text-light">
                            @Html.DisplayFor(model => item.Email)
                        </td>
                        <td class="text-light">
                            @Html.DisplayFor(model => item.FirstName)
                        </td>
                        <td class="text-light">
                            @Html.DisplayFor(model => item.LastName)
                        </td>
                        <td class="text-light">
                            @if(isUserActivated) {
                                <a asp-action="DeactivateDriver" asp-route-id="@item.Email" class="link-danger">Deactivate</a>
                            } else {
                                <a asp-action="ActivateDriver" asp-route-id="@item.Email" class="link-info">Activate</a>
                            }|
                            <a asp-action="EditDriver" asp-route-id="@item.Id" class="link-info">Edit</a> |
                            <a asp-action="DeleteDriver" asp-route-id="@item.Id" class="link-info">Delete</a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
    <a asp-action="CreateDriver" class="btn btn-primary btn-lg w-25 text-light">
        Create Driver
    </a>
</div>
